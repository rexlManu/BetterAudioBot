// TSLib - A free TeamSpeak 3 and 5 client library
// Copyright (C) 2017  TSLib contributors
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the Open Software License v. 3.0
//
// You should have received a copy of the Open Software License along with this
// program. If not, see <https://opensource.org/licenses/OSL-3.0>.
// <auto-generated />

<#@ template debug="true" hostSpecific="true" language="C#" #>
<#@ include file="BookParser.ttinclude" once="true" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

using System.Collections.Generic;

<#= ConversionSet #>

namespace TSLib.Full.Book
{
<#
var gen = BookDeclarations.Parse(Host.ResolvePath("../Declarations/Book.toml"));

foreach (var struc in gen.@struct)
{
#>
	public sealed partial class <#= struc.name #>
	{
		public <#= struc.name #>()
		{
			<# ClearIndent();
			PushIndent("\t\t\t");
			foreach(var prop in struc.properties) {
				switch(prop.mod) {
				case "array":
					WriteLine($"{prop.name} = new HashSet<{prop.type}>();");
					break;
				case "map":
					WriteLine($"{prop.name} = new Dictionary<{prop.key},{prop.type}>();");
					break;
				}
			} #>
		}

	<# foreach(var prop in struc.properties) {
			if (!prop.get.Value && !prop.set.Value) continue;
		#>
		public <#
			switch(prop.mod) {
			case "array":
				Write($"HashSet<{prop.type}>");
				break;
			case "map":
				Write($"Dictionary<{prop.key},{prop.type}>");
				break;
			default:
				// TODO better
				Write($"{prop.type}{(prop.opt == true && NullType(prop.type) ? "?" : "")}");
				break;
			}
		#> <#= prop.name #> { <#= prop.get.Value?"":"internal " #>get; <#= prop.set.Value?"":"internal " #>set; }<# } #>
	}
<#
}
#>
}